def getTransformParams(el, parent, transformData)
    set pRect to parent.getBoundingClientRect()
    set meRect to el.getBoundingClientRect()
    
    set transformData.x to Math.max(0, Math.min(transformData.x, pRect.width - meRect.width))
    set transformData.y to Math.max(0, Math.min(transformData.y, pRect.height - meRect.height))
    
    set curPos to getStylePosition(el)
    set currScale to getStyleScale(el)
    
    return {new: transformData, old: Object.assign(curPos, currScale)}
end

def applyTransform(el, old, new)
    if new.x == old.x and new.y == old.y and 
        old.width == new.width and 
        old.height == new.height
        set el.isClicked to false
        then exit
    end
    add .animated to el
    if old.x != new.x or old.y != new.y then
        set *left of el to new.x px then set *top of el to new.y px
    end
    
    if old.width != new.width or 
        old.height != new.height then
        set txt to first <textarea/> in el
        set *width of txt to new.width px 
        set *height of txt to new.height px
    end
    
    wait 0.5s then remove .animated from el
    if txt then set *transition of txt to '' end
    set el.isClicked to false
end


def getStyleScale(el)
    set txtStyles to window.getComputedStyle(first <textarea/> in el)
    return {width: parseInt(txtStyles.width), height: parseInt(txtStyles.height)}

def getStylePosition(el)
    set style to window.getComputedStyle(el)
    return {x: parseInt(style.left), y: parseInt(style.top)}